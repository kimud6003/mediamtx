{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/v3/auth/jwks/refresh": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "Refresh JWKS public key cache",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v3/config/global/get": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "config"
                ],
                "summary": "Get global configuration",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/conf.Global"
                        }
                    }
                }
            }
        },
        "/v3/config/global/patch": {
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "config"
                ],
                "summary": "Patch global configuration",
                "parameters": [
                    {
                        "description": "Global configuration patch",
                        "name": "config",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/conf.OptionalGlobal"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/defs.APIError"
                        }
                    }
                }
            }
        },
        "/v3/config/pathdefaults/get": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "config"
                ],
                "summary": "Get default path configuration",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/conf.Path"
                        }
                    }
                }
            }
        },
        "/v3/config/pathdefaults/patch": {
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "config"
                ],
                "summary": "Patch default path configuration",
                "parameters": [
                    {
                        "description": "Default path configuration patch",
                        "name": "config",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/conf.OptionalPath"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/defs.APIError"
                        }
                    }
                }
            }
        },
        "/v3/config/paths/add/{name}": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "config"
                ],
                "summary": "Add a new path configuration",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Path name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "New path configuration",
                        "name": "config",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/conf.OptionalPath"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/defs.APIError"
                        }
                    }
                }
            }
        },
        "/v3/config/paths/delete/{name}": {
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "config"
                ],
                "summary": "Delete a path configuration",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Path name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/defs.APIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/defs.APIError"
                        }
                    }
                }
            }
        },
        "/v3/config/paths/get/{name}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "config"
                ],
                "summary": "Get a specific path configuration",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Path name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/conf.Path"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/defs.APIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/defs.APIError"
                        }
                    }
                }
            }
        },
        "/v3/config/paths/list": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "config"
                ],
                "summary": "List all configured paths",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Items per page",
                        "name": "itemsPerPage",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/defs.APIPathConfList"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/defs.APIError"
                        }
                    }
                }
            }
        },
        "/v3/config/paths/patch/{name}": {
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "config"
                ],
                "summary": "Patch a specific path configuration",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Path name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Path configuration patch",
                        "name": "config",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/conf.OptionalPath"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/defs.APIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/defs.APIError"
                        }
                    }
                }
            }
        },
        "/v3/config/paths/replace/{name}": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "config"
                ],
                "summary": "Replace a specific path configuration",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Path name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Full path configuration",
                        "name": "config",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/conf.OptionalPath"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/defs.APIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/defs.APIError"
                        }
                    }
                }
            }
        },
        "/v3/hlsmuxers/get/{name}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "hls"
                ],
                "summary": "Get HLS muxer",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Path name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/defs.APIHLSMuxer"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/defs.APIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/defs.APIError"
                        }
                    }
                }
            }
        },
        "/v3/hlsmuxers/list": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "hls"
                ],
                "summary": "List HLS muxers",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/defs.APIHLSMuxerList"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/defs.APIError"
                        }
                    }
                }
            }
        },
        "/v3/paths/get/{name}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "runtime"
                ],
                "summary": "Get stream details by path",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Path name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/defs.APIPath"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/defs.APIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/defs.APIError"
                        }
                    }
                }
            }
        },
        "/v3/paths/list": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "runtime"
                ],
                "summary": "List active stream paths",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Items per page",
                        "name": "itemsPerPage",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/defs.APIPathList"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/defs.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/defs.APIError"
                        }
                    }
                }
            }
        },
        "/v3/recordings/deletesegment": {
            "delete": {
                "tags": [
                    "recordings"
                ],
                "summary": "Delete a recording segment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Path name",
                        "name": "path",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Start time (RFC3339)",
                        "name": "start",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/defs.APIError"
                        }
                    }
                }
            }
        },
        "/v3/recordings/get/{name}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "recordings"
                ],
                "summary": "Get recordings",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Path name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/defs.APIRecording"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/defs.APIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/defs.APIError"
                        }
                    }
                }
            }
        },
        "/v3/recordings/list": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "recordings"
                ],
                "summary": "List recordings",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/defs.APIRecordingList"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/defs.APIError"
                        }
                    }
                }
            }
        },
        "/v3/rtmpconns/get/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rtmp"
                ],
                "summary": "Get RTMP connection",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Connection UUID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/defs.APIRTMPConn"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/defs.APIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/defs.APIError"
                        }
                    }
                }
            }
        },
        "/v3/rtmpconns/kick/{id}": {
            "post": {
                "tags": [
                    "rtmp"
                ],
                "summary": "Kick RTMP connection",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Connection UUID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/defs.APIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/defs.APIError"
                        }
                    }
                }
            }
        },
        "/v3/rtmpconns/list": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rtmp"
                ],
                "summary": "List RTMP connections",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/defs.APIRTMPConnList"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/defs.APIError"
                        }
                    }
                }
            }
        },
        "/v3/rtmpsconns/get/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rtmps"
                ],
                "summary": "Get RTMPS connection",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Connection UUID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/defs.APIRTMPConn"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/defs.APIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/defs.APIError"
                        }
                    }
                }
            }
        },
        "/v3/rtmpsconns/kick/{id}": {
            "post": {
                "tags": [
                    "rtmps"
                ],
                "summary": "Kick RTMPS connection",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Connection ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/defs.APIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/defs.APIError"
                        }
                    }
                }
            }
        },
        "/v3/rtmpsconns/list": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rtmps"
                ],
                "summary": "List RTMPS connections",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/defs.APIRTMPConnList"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/defs.APIError"
                        }
                    }
                }
            }
        },
        "/v3/rtspconns/get/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rtsp"
                ],
                "summary": "Get RTSP connection details by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Connection UUID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/defs.APIRTSPConn"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/defs.APIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/defs.APIError"
                        }
                    }
                }
            }
        },
        "/v3/rtspconns/list": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rtsp"
                ],
                "summary": "List RTSP connections",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Number of items per page",
                        "name": "itemsPerPage",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/defs.APIRTSPConnsList"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/defs.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/defs.APIError"
                        }
                    }
                }
            }
        },
        "/v3/rtspsconns/get/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rtsps"
                ],
                "summary": "Get RTSPS connection",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Connection UUID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/defs.APIRTSPConn"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/defs.APIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/defs.APIError"
                        }
                    }
                }
            }
        },
        "/v3/rtspsconns/list": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rtsps"
                ],
                "summary": "List RTSPS connections",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/defs.APIRTSPConnsList"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/defs.APIError"
                        }
                    }
                }
            }
        },
        "/v3/rtspsessions/get/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rtsp"
                ],
                "summary": "Get RTSP session",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session UUID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/defs.APIRTSPSession"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/defs.APIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/defs.APIError"
                        }
                    }
                }
            }
        },
        "/v3/rtspsessions/kick/{id}": {
            "post": {
                "tags": [
                    "rtsp"
                ],
                "summary": "Kick RTSP session",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session UUID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/defs.APIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/defs.APIError"
                        }
                    }
                }
            }
        },
        "/v3/rtspsessions/list": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rtsp"
                ],
                "summary": "List RTSP sessions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/defs.APIRTSPSessionList"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/defs.APIError"
                        }
                    }
                }
            }
        },
        "/v3/rtspssessions/get/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rtsps"
                ],
                "summary": "Get RTSPS session",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session UUID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/defs.APIRTSPSession"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/defs.APIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/defs.APIError"
                        }
                    }
                }
            }
        },
        "/v3/rtspssessions/kick/{id}": {
            "post": {
                "tags": [
                    "rtsps"
                ],
                "summary": "Kick RTSPS session",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session UUID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/defs.APIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/defs.APIError"
                        }
                    }
                }
            }
        },
        "/v3/rtspssessions/list": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rtsps"
                ],
                "summary": "List RTSPS sessions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/defs.APIRTSPSessionList"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/defs.APIError"
                        }
                    }
                }
            }
        },
        "/v3/srtconns/get/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "srt"
                ],
                "summary": "Get SRT connection",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Connection ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/defs.APISRTConn"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/defs.APIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/defs.APIError"
                        }
                    }
                }
            }
        },
        "/v3/srtconns/kick/{id}": {
            "post": {
                "tags": [
                    "srt"
                ],
                "summary": "Kick SRT connection",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Connection ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/defs.APIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/defs.APIError"
                        }
                    }
                }
            }
        },
        "/v3/srtconns/list": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "srt"
                ],
                "summary": "List SRT connections",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/defs.APISRTConnList"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/defs.APIError"
                        }
                    }
                }
            }
        },
        "/v3/thumbnail/upload": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "thumbnail"
                ],
                "summary": "Capture thumbnails and update metadata",
                "parameters": [
                    {
                        "description": "Thumbnail request payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/defs.ThumbnailUploadRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/defs.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/defs.APIError"
                        }
                    }
                }
            }
        },
        "/v3/webrtcsessions/get/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "webrtc"
                ],
                "summary": "Get WebRTC session",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/defs.APIWebRTCSession"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/defs.APIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/defs.APIError"
                        }
                    }
                }
            }
        },
        "/v3/webrtcsessions/kick/{id}": {
            "post": {
                "tags": [
                    "webrtc"
                ],
                "summary": "Kick WebRTC session",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/defs.APIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/defs.APIError"
                        }
                    }
                }
            }
        },
        "/v3/webrtcsessions/list": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "webrtc"
                ],
                "summary": "List WebRTC sessions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/defs.APIWebRTCSessionList"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/defs.APIError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "conf.Duration": {
            "type": "integer",
            "enum": [
                -9223372036854775808,
                9223372036854775807,
                1,
                1000,
                1000000,
                1000000000,
                60000000000,
                3600000000000
            ],
            "x-enum-varnames": [
                "minDuration",
                "maxDuration",
                "Nanosecond",
                "Microsecond",
                "Millisecond",
                "Second",
                "Minute",
                "Hour"
            ]
        },
        "conf.Global": {
            "type": "object",
            "properties": {
                "values": {}
            }
        },
        "conf.OptionalGlobal": {
            "type": "object",
            "properties": {
                "values": {}
            }
        },
        "conf.OptionalPath": {
            "type": "object",
            "properties": {
                "values": {}
            }
        },
        "conf.Path": {
            "type": "object",
            "properties": {
                "disablePublisherOverride": {
                    "description": "deprecated",
                    "type": "boolean"
                },
                "fallback": {
                    "type": "string"
                },
                "maxReaders": {
                    "type": "integer"
                },
                "name": {
                    "description": "filled by Check()",
                    "type": "string"
                },
                "overridePublisher": {
                    "description": "Publisher source",
                    "type": "boolean"
                },
                "playback": {
                    "description": "deprecated",
                    "type": "boolean"
                },
                "publishIPs": {
                    "description": "deprecated",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/net.IPNet"
                    }
                },
                "publishPass": {
                    "description": "deprecated",
                    "type": "string"
                },
                "publishUser": {
                    "description": "Authentication (deprecated)",
                    "type": "string"
                },
                "readIPs": {
                    "description": "deprecated",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/net.IPNet"
                    }
                },
                "readPass": {
                    "description": "deprecated",
                    "type": "string"
                },
                "readUser": {
                    "description": "deprecated",
                    "type": "string"
                },
                "record": {
                    "description": "Record",
                    "type": "boolean"
                },
                "recordDeleteAfter": {
                    "$ref": "#/definitions/conf.Duration"
                },
                "recordFormat": {
                    "$ref": "#/definitions/conf.RecordFormat"
                },
                "recordPartDuration": {
                    "$ref": "#/definitions/conf.Duration"
                },
                "recordPath": {
                    "type": "string"
                },
                "recordSegmentDuration": {
                    "$ref": "#/definitions/conf.Duration"
                },
                "rpiCameraAWB": {
                    "type": "string"
                },
                "rpiCameraAWBGains": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                },
                "rpiCameraAfMode": {
                    "type": "string"
                },
                "rpiCameraAfRange": {
                    "type": "string"
                },
                "rpiCameraAfSpeed": {
                    "type": "string"
                },
                "rpiCameraAfWindow": {
                    "type": "string"
                },
                "rpiCameraBitrate": {
                    "type": "integer"
                },
                "rpiCameraBrightness": {
                    "type": "number"
                },
                "rpiCameraCamID": {
                    "description": "Raspberry Pi Camera source",
                    "type": "integer"
                },
                "rpiCameraCodec": {
                    "type": "string"
                },
                "rpiCameraContrast": {
                    "type": "number"
                },
                "rpiCameraDenoise": {
                    "type": "string"
                },
                "rpiCameraEV": {
                    "type": "number"
                },
                "rpiCameraExposure": {
                    "type": "string"
                },
                "rpiCameraFPS": {
                    "type": "number"
                },
                "rpiCameraFlickerPeriod": {
                    "type": "integer"
                },
                "rpiCameraGain": {
                    "type": "number"
                },
                "rpiCameraHDR": {
                    "type": "boolean"
                },
                "rpiCameraHFlip": {
                    "type": "boolean"
                },
                "rpiCameraHeight": {
                    "type": "integer"
                },
                "rpiCameraIDRPeriod": {
                    "type": "integer"
                },
                "rpiCameraJPEGQuality": {
                    "type": "integer"
                },
                "rpiCameraLensPosition": {
                    "type": "number"
                },
                "rpiCameraLevel": {
                    "type": "string"
                },
                "rpiCameraMetering": {
                    "type": "string"
                },
                "rpiCameraMode": {
                    "type": "string"
                },
                "rpiCameraProfile": {
                    "type": "string"
                },
                "rpiCameraROI": {
                    "type": "string"
                },
                "rpiCameraSaturation": {
                    "type": "number"
                },
                "rpiCameraSecondary": {
                    "type": "boolean"
                },
                "rpiCameraSharpness": {
                    "type": "number"
                },
                "rpiCameraShutter": {
                    "type": "integer"
                },
                "rpiCameraTextOverlay": {
                    "type": "string"
                },
                "rpiCameraTextOverlayEnable": {
                    "type": "boolean"
                },
                "rpiCameraTuningFile": {
                    "type": "string"
                },
                "rpiCameraVFlip": {
                    "type": "boolean"
                },
                "rpiCameraWidth": {
                    "type": "integer"
                },
                "rtspAnyPort": {
                    "type": "boolean"
                },
                "rtspRangeStart": {
                    "type": "string"
                },
                "rtspRangeType": {
                    "$ref": "#/definitions/conf.RTSPRangeType"
                },
                "rtspTransport": {
                    "description": "RTSP source",
                    "allOf": [
                        {
                            "$ref": "#/definitions/conf.RTSPTransport"
                        }
                    ]
                },
                "runOnDemand": {
                    "type": "string"
                },
                "runOnDemandCloseAfter": {
                    "$ref": "#/definitions/conf.Duration"
                },
                "runOnDemandRestart": {
                    "type": "boolean"
                },
                "runOnDemandStartTimeout": {
                    "$ref": "#/definitions/conf.Duration"
                },
                "runOnInit": {
                    "description": "Hooks",
                    "type": "string"
                },
                "runOnInitRestart": {
                    "type": "boolean"
                },
                "runOnNotReady": {
                    "type": "string"
                },
                "runOnRead": {
                    "type": "string"
                },
                "runOnReadRestart": {
                    "type": "boolean"
                },
                "runOnReady": {
                    "type": "string"
                },
                "runOnReadyRestart": {
                    "type": "boolean"
                },
                "runOnRecordSegmentComplete": {
                    "type": "string"
                },
                "runOnRecordSegmentCreate": {
                    "type": "string"
                },
                "runOnUnDemand": {
                    "type": "string"
                },
                "runOnUnread": {
                    "type": "string"
                },
                "source": {
                    "description": "General",
                    "type": "string"
                },
                "sourceAnyPortEnable": {
                    "description": "deprecated",
                    "type": "boolean"
                },
                "sourceFingerprint": {
                    "type": "string"
                },
                "sourceOnDemand": {
                    "type": "boolean"
                },
                "sourceOnDemandCloseAfter": {
                    "$ref": "#/definitions/conf.Duration"
                },
                "sourceOnDemandStartTimeout": {
                    "$ref": "#/definitions/conf.Duration"
                },
                "sourceProtocol": {
                    "description": "deprecated",
                    "allOf": [
                        {
                            "$ref": "#/definitions/conf.RTSPTransport"
                        }
                    ]
                },
                "sourceRedirect": {
                    "description": "Redirect source",
                    "type": "string"
                },
                "srtPublishPassphrase": {
                    "type": "string"
                },
                "srtReadPassphrase": {
                    "type": "string"
                },
                "useAbsoluteTimestamp": {
                    "type": "boolean"
                }
            }
        },
        "conf.RTSPRangeType": {
            "type": "integer",
            "enum": [
                0,
                1,
                2,
                3
            ],
            "x-enum-varnames": [
                "RTSPRangeTypeUndefined",
                "RTSPRangeTypeClock",
                "RTSPRangeTypeNPT",
                "RTSPRangeTypeSMPTE"
            ]
        },
        "conf.RTSPTransport": {
            "type": "object",
            "properties": {
                "gortsplib.Transport": {
                    "type": "integer",
                    "enum": [
                        0,
                        1,
                        2
                    ],
                    "x-enum-varnames": [
                        "TransportUDP",
                        "TransportUDPMulticast",
                        "TransportTCP"
                    ]
                }
            }
        },
        "conf.RecordFormat": {
            "type": "integer",
            "enum": [
                0,
                1
            ],
            "x-enum-varnames": [
                "RecordFormatFMP4",
                "RecordFormatMPEGTS"
            ]
        },
        "defs.APIError": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "defs.APIHLSMuxer": {
            "type": "object",
            "properties": {
                "bytesSent": {
                    "type": "integer"
                },
                "created": {
                    "type": "string"
                },
                "lastRequest": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                }
            }
        },
        "defs.APIHLSMuxerList": {
            "type": "object",
            "properties": {
                "itemCount": {
                    "type": "integer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/defs.APIHLSMuxer"
                    }
                },
                "pageCount": {
                    "type": "integer"
                }
            }
        },
        "defs.APIPath": {
            "type": "object",
            "properties": {
                "bytesReceived": {
                    "type": "integer"
                },
                "bytesSent": {
                    "type": "integer"
                },
                "confName": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "readers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/defs.APIPathSourceOrReader"
                    }
                },
                "ready": {
                    "type": "boolean"
                },
                "readyTime": {
                    "type": "string"
                },
                "source": {
                    "$ref": "#/definitions/defs.APIPathSourceOrReader"
                },
                "tracks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "defs.APIPathConfList": {
            "type": "object",
            "properties": {
                "itemCount": {
                    "type": "integer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/conf.Path"
                    }
                },
                "pageCount": {
                    "type": "integer"
                }
            }
        },
        "defs.APIPathList": {
            "type": "object",
            "properties": {
                "itemCount": {
                    "type": "integer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/defs.APIPath"
                    }
                },
                "pageCount": {
                    "type": "integer"
                }
            }
        },
        "defs.APIPathSourceOrReader": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "defs.APIRTMPConn": {
            "type": "object",
            "properties": {
                "bytesReceived": {
                    "type": "integer"
                },
                "bytesSent": {
                    "type": "integer"
                },
                "created": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "query": {
                    "type": "string"
                },
                "remoteAddr": {
                    "type": "string"
                },
                "state": {
                    "$ref": "#/definitions/defs.APIRTMPConnState"
                }
            }
        },
        "defs.APIRTMPConnList": {
            "type": "object",
            "properties": {
                "itemCount": {
                    "type": "integer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/defs.APIRTMPConn"
                    }
                },
                "pageCount": {
                    "type": "integer"
                }
            }
        },
        "defs.APIRTMPConnState": {
            "type": "string",
            "enum": [
                "idle",
                "read",
                "publish"
            ],
            "x-enum-varnames": [
                "APIRTMPConnStateIdle",
                "APIRTMPConnStateRead",
                "APIRTMPConnStatePublish"
            ]
        },
        "defs.APIRTSPConn": {
            "type": "object",
            "properties": {
                "bytesReceived": {
                    "type": "integer"
                },
                "bytesSent": {
                    "type": "integer"
                },
                "created": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "remoteAddr": {
                    "type": "string"
                },
                "session": {
                    "type": "string"
                }
            }
        },
        "defs.APIRTSPConnsList": {
            "type": "object",
            "properties": {
                "itemCount": {
                    "type": "integer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/defs.APIRTSPConn"
                    }
                },
                "pageCount": {
                    "type": "integer"
                }
            }
        },
        "defs.APIRTSPSession": {
            "type": "object",
            "properties": {
                "bytesReceived": {
                    "type": "integer"
                },
                "bytesSent": {
                    "type": "integer"
                },
                "created": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "query": {
                    "type": "string"
                },
                "remoteAddr": {
                    "type": "string"
                },
                "rtcpPacketsInError": {
                    "type": "integer"
                },
                "rtcpPacketsReceived": {
                    "type": "integer"
                },
                "rtcpPacketsSent": {
                    "type": "integer"
                },
                "rtpPacketsInError": {
                    "type": "integer"
                },
                "rtpPacketsJitter": {
                    "type": "number"
                },
                "rtpPacketsLost": {
                    "type": "integer"
                },
                "rtpPacketsReceived": {
                    "type": "integer"
                },
                "rtpPacketsSent": {
                    "type": "integer"
                },
                "state": {
                    "$ref": "#/definitions/defs.APIRTSPSessionState"
                },
                "transport": {
                    "type": "string"
                }
            }
        },
        "defs.APIRTSPSessionList": {
            "type": "object",
            "properties": {
                "itemCount": {
                    "type": "integer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/defs.APIRTSPSession"
                    }
                },
                "pageCount": {
                    "type": "integer"
                }
            }
        },
        "defs.APIRTSPSessionState": {
            "type": "string",
            "enum": [
                "idle",
                "read",
                "publish"
            ],
            "x-enum-varnames": [
                "APIRTSPSessionStateIdle",
                "APIRTSPSessionStateRead",
                "APIRTSPSessionStatePublish"
            ]
        },
        "defs.APIRecording": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "segments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/defs.APIRecordingSegment"
                    }
                }
            }
        },
        "defs.APIRecordingList": {
            "type": "object",
            "properties": {
                "itemCount": {
                    "type": "integer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/defs.APIRecording"
                    }
                },
                "pageCount": {
                    "type": "integer"
                }
            }
        },
        "defs.APIRecordingSegment": {
            "type": "object",
            "properties": {
                "start": {
                    "type": "string"
                }
            }
        },
        "defs.APISRTConn": {
            "type": "object",
            "properties": {
                "byteMSS": {
                    "description": "Maximum Segment Size (MSS), in bytes",
                    "type": "integer"
                },
                "bytesAvailReceiveBuf": {
                    "description": "The available space in the receiver's buffer, in bytes",
                    "type": "integer"
                },
                "bytesAvailSendBuf": {
                    "description": "The available space in the sender's buffer, in bytes",
                    "type": "integer"
                },
                "bytesReceiveBuf": {
                    "description": "Instantaneous (current) value of packetsRcvBuf, expressed in bytes, including payload and all headers (IP, TCP, SRT)",
                    "type": "integer"
                },
                "bytesReceived": {
                    "description": "Same as packetsReceived, but expressed in bytes, including payload and all the headers (IP, TCP, SRT)",
                    "type": "integer"
                },
                "bytesReceivedBelated": {
                    "description": "Same as PacketsReceivedBelated, but expressed in bytes, including payload and all the headers (IP, TCP, SRT)",
                    "type": "integer"
                },
                "bytesReceivedDrop": {
                    "description": "Same as packetsReceivedDrop, but expressed in bytes, including payload and all the headers (IP, TCP, SRT)",
                    "type": "integer"
                },
                "bytesReceivedLoss": {
                    "description": "Same as packetsReceivedLoss, but expressed in bytes, including payload and all the headers (IP, TCP, SRT),\nbytes for the presently missing (either reordered or lost) packets' payloads are estimated\nbased on the average packet size",
                    "type": "integer"
                },
                "bytesReceivedRetrans": {
                    "description": "Same as packetsReceivedRetrans, but expressed in bytes, including payload and all the headers (IP, TCP, SRT)",
                    "type": "integer"
                },
                "bytesReceivedUndecrypt": {
                    "description": "Same as packetsReceivedUndecrypt, but expressed in bytes, including payload and all the headers (IP, TCP, SRT)",
                    "type": "integer"
                },
                "bytesReceivedUnique": {
                    "description": "Same as packetsReceivedUnique, but expressed in bytes, including payload and all the headers (IP, TCP, SRT)",
                    "type": "integer"
                },
                "bytesRetrans": {
                    "description": "Same as packetsRetrans, but expressed in bytes, including payload and all the headers (IP, TCP, SRT)",
                    "type": "integer"
                },
                "bytesSendBuf": {
                    "description": "Instantaneous (current) value of packetsSndBuf, but expressed in bytes,\nincluding payload and all headers (IP, TCP, SRT)",
                    "type": "integer"
                },
                "bytesSendDrop": {
                    "description": "Same as packetsSendDrop, but expressed in bytes, including payload and all the headers (IP, TCP, SRT)",
                    "type": "integer"
                },
                "bytesSent": {
                    "description": "Same as packetsSent, but expressed in bytes, including payload and all the headers (IP, TCP, SRT)",
                    "type": "integer"
                },
                "bytesSentUnique": {
                    "description": "Same as packetsSentUnique, but expressed in bytes, including payload and all the headers (IP, TCP, SRT)",
                    "type": "integer"
                },
                "created": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "mbpsLinkCapacity": {
                    "description": "Estimated capacity of the network link, in Mbps",
                    "type": "number"
                },
                "mbpsMaxBW": {
                    "description": "Transmission bandwidth limit, in Mbps",
                    "type": "number"
                },
                "mbpsReceiveRate": {
                    "description": "Current receiving bandwidth, in Mbps",
                    "type": "number"
                },
                "mbpsSendRate": {
                    "description": "Current transmission bandwidth, in Mbps",
                    "type": "number"
                },
                "msRTT": {
                    "description": "Smoothed round-trip time (SRTT), an exponentially-weighted moving average (EWMA)\nof an endpoint's RTT samples, in milliseconds",
                    "type": "number"
                },
                "msReceiveBuf": {
                    "description": "The timespan (msec) of acknowledged packets in the receiver's buffer",
                    "type": "integer"
                },
                "msReceiveTsbPdDelay": {
                    "description": "Timestamp-based Packet Delivery Delay value set on the socket via SRTO_RCVLATENCY or SRTO_LATENCY",
                    "type": "integer"
                },
                "msSendBuf": {
                    "description": "The timespan (msec) of packets in the sender's buffer (unacknowledged packets)",
                    "type": "integer"
                },
                "msSendTsbPdDelay": {
                    "description": "Timestamp-based Packet Delivery Delay value of the peer",
                    "type": "integer"
                },
                "packetsFlightSize": {
                    "description": "The number of packets in flight",
                    "type": "integer"
                },
                "packetsFlowWindow": {
                    "description": "The maximum number of packets that can be \"in flight\"",
                    "type": "integer"
                },
                "packetsReceiveBuf": {
                    "description": "The number of acknowledged packets in receiver's buffer",
                    "type": "integer"
                },
                "packetsReceived": {
                    "description": "The total number of received DATA packets, including retransmitted packets",
                    "type": "integer"
                },
                "packetsReceivedACK": {
                    "description": "The total number of received ACK (Acknowledgement) control packets",
                    "type": "integer"
                },
                "packetsReceivedAvgBelatedTime": {
                    "description": "Accumulated difference between the current time and the time-to-play of a packet that is received late",
                    "type": "integer"
                },
                "packetsReceivedBelated": {
                    "description": "??",
                    "type": "integer"
                },
                "packetsReceivedDrop": {
                    "description": "The total number of dropped by the SRT receiver and, as a result,\nnot delivered to the upstream application DATA packets",
                    "type": "integer"
                },
                "packetsReceivedKM": {
                    "description": "The total number of received KM (Key Material) control packets",
                    "type": "integer"
                },
                "packetsReceivedLoss": {
                    "description": "The total number of SRT DATA packets detected as presently missing (either reordered or lost) at the receiver side",
                    "type": "integer"
                },
                "packetsReceivedLossRate": {
                    "description": "Percentage of retransmitted data vs. received data",
                    "type": "number"
                },
                "packetsReceivedNAK": {
                    "description": "The total number of received NAK (Negative Acknowledgement) control packets",
                    "type": "integer"
                },
                "packetsReceivedRetrans": {
                    "description": "The total number of retransmitted packets registered at the receiver side",
                    "type": "integer"
                },
                "packetsReceivedUndecrypt": {
                    "description": "The total number of packets that failed to be decrypted at the receiver side",
                    "type": "integer"
                },
                "packetsReceivedUnique": {
                    "description": "The total number of unique original, retransmitted or recovered by the packet filter DATA packets\nreceived in time, decrypted without errors and, as a result, scheduled for delivery to the\nupstream application by the SRT receiver.",
                    "type": "integer"
                },
                "packetsReorderTolerance": {
                    "description": "Instant value of the packet reorder tolerance",
                    "type": "integer"
                },
                "packetsRetrans": {
                    "description": "The total number of retransmitted packets sent by the SRT sender",
                    "type": "integer"
                },
                "packetsSendBuf": {
                    "description": "The number of packets in the sender's buffer that are already scheduled\nfor sending or even possibly sent, but not yet acknowledged",
                    "type": "integer"
                },
                "packetsSendDrop": {
                    "description": "The total number of dropped by the SRT sender DATA packets that have no chance to be delivered in time",
                    "type": "integer"
                },
                "packetsSendLoss": {
                    "description": "The total number of data packets considered or reported as lost at the sender side.\nDoes not correspond to the packets detected as lost at the receiver side.",
                    "type": "integer"
                },
                "packetsSendLossRate": {
                    "description": "Percentage of resent data vs. sent data",
                    "type": "number"
                },
                "packetsSent": {
                    "description": "The total number of sent DATA packets, including retransmitted packets",
                    "type": "integer"
                },
                "packetsSentACK": {
                    "description": "The total number of sent ACK (Acknowledgement) control packets",
                    "type": "integer"
                },
                "packetsSentKM": {
                    "description": "The total number of sent KM (Key Material) control packets",
                    "type": "integer"
                },
                "packetsSentNAK": {
                    "description": "The total number of sent NAK (Negative Acknowledgement) control packets",
                    "type": "integer"
                },
                "packetsSentUnique": {
                    "description": "The total number of unique DATA packets sent by the SRT sender",
                    "type": "integer"
                },
                "path": {
                    "type": "string"
                },
                "query": {
                    "type": "string"
                },
                "remoteAddr": {
                    "type": "string"
                },
                "state": {
                    "$ref": "#/definitions/defs.APISRTConnState"
                },
                "usPacketsSendPeriod": {
                    "description": "Current minimum time interval between which consecutive packets are sent, in microseconds",
                    "type": "number"
                },
                "usSndDuration": {
                    "description": "The total accumulated time in microseconds, during which the SRT sender has some data to transmit,\nincluding packets that have been sent, but not yet acknowledged",
                    "type": "integer"
                }
            }
        },
        "defs.APISRTConnList": {
            "type": "object",
            "properties": {
                "itemCount": {
                    "type": "integer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/defs.APISRTConn"
                    }
                },
                "pageCount": {
                    "type": "integer"
                }
            }
        },
        "defs.APISRTConnState": {
            "type": "string",
            "enum": [
                "idle",
                "read",
                "publish"
            ],
            "x-enum-varnames": [
                "APISRTConnStateIdle",
                "APISRTConnStateRead",
                "APISRTConnStatePublish"
            ]
        },
        "defs.APIWebRTCSession": {
            "type": "object",
            "properties": {
                "bytesReceived": {
                    "type": "integer"
                },
                "bytesSent": {
                    "type": "integer"
                },
                "created": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "localCandidate": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "peerConnectionEstablished": {
                    "type": "boolean"
                },
                "query": {
                    "type": "string"
                },
                "remoteAddr": {
                    "type": "string"
                },
                "remoteCandidate": {
                    "type": "string"
                },
                "state": {
                    "$ref": "#/definitions/defs.APIWebRTCSessionState"
                }
            }
        },
        "defs.APIWebRTCSessionList": {
            "type": "object",
            "properties": {
                "itemCount": {
                    "type": "integer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/defs.APIWebRTCSession"
                    }
                },
                "pageCount": {
                    "type": "integer"
                }
            }
        },
        "defs.APIWebRTCSessionState": {
            "type": "string",
            "enum": [
                "read",
                "publish"
            ],
            "x-enum-varnames": [
                "APIWebRTCSessionStateRead",
                "APIWebRTCSessionStatePublish"
            ]
        },
        "defs.ThumbnailUploadRequest": {
            "type": "object",
            "properties": {
                "accessKey": {
                    "type": "string"
                },
                "apiServerEndpoint": {
                    "type": "string"
                },
                "cameraId": {
                    "type": "string"
                },
                "cameraRoiDefaultSize": {
                    "type": "string"
                },
                "cameraThumbnailDefaultSize": {
                    "type": "string"
                },
                "cronServerHost": {
                    "type": "string"
                },
                "fhdImage": {
                    "type": "string"
                },
                "filesystemId": {
                    "type": "string"
                },
                "minioBucket": {
                    "type": "string"
                },
                "organization": {
                    "type": "string"
                },
                "rtspPath": {
                    "type": "string"
                },
                "rtspPort": {
                    "type": "integer"
                },
                "secretKey": {
                    "type": "string"
                },
                "smallImage": {
                    "type": "string"
                },
                "videoId": {
                    "type": "string"
                }
            }
        },
        "net.IPNet": {
            "type": "object",
            "properties": {
                "ip": {
                    "description": "network number",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "mask": {
                    "description": "network mask",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        }
    }
}